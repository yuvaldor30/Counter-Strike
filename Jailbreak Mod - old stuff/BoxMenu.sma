/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <cstrike>
#include <hamsandwich>
#include <fakemeta_util>

#define TAG "eTs"
#define Chat_TAG "eTs"
#define s_IP "31.168.169.42:40800"

#define Year_Expired 2018
#define Month_Expired 1
#define MaxPlayers get_maxplayers()

native get_user_max_health(client)
native get_run_day()
native get_run_vote()
native get_lr_run()

new bool:gBox,bool:freeze[33],cdactive,cdtime[33],timer,Formatex[100],cBox;

public plugin_init() {
	
	new Year[6],Month[3],year,month,serverIP[20];
	format_time(Year,charsmax(Year),"%Y",get_systime())
	format_time(Month,charsmax(Month),"%m",get_systime())
	year = str_to_num(Year);
	month = str_to_num(Month);
	get_user_ip(0,serverIP,charsmax(serverIP),0);
	if((year > Year_Expired || (year == Year_Expired && month >= Month_Expired)) || (!equali(s_IP,serverIP)))
		set_fail_state("Mod Time has been expired or Your Server IP is not allowed");
	register_plugin("Box Menu","1.0","1.0")
	
	register_clcmd("say /box","BoxMenu");
	cBox = register_cvar("jb_box","1");
	register_logevent("RoundStart", 2, "1=Round_Start")
	RegisterHam(Ham_TakeDamage,"player","UnDamage")
}
public RoundStart()
{
	server_cmd("mp_friendlyfire 0");
	gBox =false;
}
public BoxMenu (id)
{
	if(!(get_pcvar_num(cBox))) return 0;
	if((get_user_flags(id) & ADMIN_LEVEL_E) || (is_user_alive (id) && cs_get_user_team(id) == CS_TEAM_CT))
	{
		if(  cdactive )
			return  ColorChat(id,"You ^1cannot use ^3Box Menu ^1while countdown running!")
		if(get_run_day() || get_run_vote())
			return ColorChat(id,"You ^1cannot use the ^3Box Menu ^1while day running" );
		if(get_lr_run())
			return ColorChat(id,"You ^1cannot use the ^3Box Menu ^1while Last Request Dual" );
		formatex(Formatex,charsmax(Formatex),"\r[ \w%s \r] \wBox Menu",TAG);
		new bMenu = menu_create(Formatex,"BoxMenu_Handler");
		formatex(Formatex,charsmax(Formatex),"\wCountdown \d[\r%i \ySeconds\d]", cdtime[id] );
		menu_additem(bMenu,Formatex);
		formatex(Formatex,charsmax(Formatex),"\wFreeze: %s",(freeze[id]) ? "\rTerrorist" : "\dNone");
		menu_additem(bMenu,Formatex);
		formatex(Formatex,charsmax(Formatex),"\wBox Status: %s",(gBox) ? "\rActivated" : "\dDeactivated" );
		menu_additem(bMenu,Formatex);
		menu_additem(bMenu,"\wReset Terrorist Health");
		
		menu_display(id,bMenu);
		return 1;
	}
	ColorChat(id,"You ^1have ^4no access ^1to this ^1command!");
	return 1;
}		
public BoxMenu_Handler (id,bMenu,item)
{
	if(!(get_pcvar_num(cBox))) return 0;
	new szName [32];
	get_user_name(id,szName,charsmax(szName));
	if(!((get_user_flags(id) & ADMIN_LEVEL_E) || (is_user_alive (id) && cs_get_user_team(id) == CS_TEAM_CT)))
		return ColorChat(id,"You ^1have ^4no access ^1to this command!");
	switch(item)
	{
		case MENU_EXIT: 
		{
			freeze[id] = false;
			cdtime[id] = 0;
			return menu_destroy(bMenu);
		}
		case 0:
		{
			if(cdtime[id] == 5)
				cdtime[id] =0
			else
				cdtime[id] ++;
		}
		case 1:
			freeze[id] = !freeze[id]
		case 2:
		{
			if (gBox)
			{
				if( cdactive  && timer >=1)
					ColorChat(id,"You ^4cannot deactivate ^1the box ^3still countdown ^4running!");
				else
					stopbox (id)
			}
			else
			{
				if(cdtime[id] > 0)
				{
					timer=cdtime[id]
					cdactive=true
					gBox=true
					countdown (id)
				}
				else
					startbox (id)		
			}
		}
		case 3:
		{
			ColorChat(0,"^4%s ^1has ^3resetted ^1the terrorist health.",szName)
			BoxMenu (id)
			resethp(id)
		}
			
	}
	return BoxMenu (id);
}
public countdown(id)
{
	if(!(get_pcvar_num(cBox))) return 0;
	new szName [32];
	if(timer >= 1)
	{
		set_hudmessage(21, 157, 144, -1.0, 0.69, 1, 6.0, 18.0,_,_,4)
		show_hudmessage(0, "Box Activated^n Time Left: %i Seconds",timer)
		new szVox[ 10 ];
		num_to_word( timer, szVox, charsmax( szVox ) );
		client_cmd( 0, "spk ^"vox/%s^"", szVox );
		timer -= 1
		set_task(1.0, "countdown",id)
		if(freeze[id])
		{
			gBox=true;
			for(new i = 1; i <= MaxPlayers; i++)
			{
				if( is_user_alive(i) && cs_get_user_team( i ) == CS_TEAM_T)
					set_pev(i, pev_flags, pev(i, pev_flags) | FL_FROZEN)
			}
		}
	}
	else
	{
		set_hudmessage(255, 120, 255, -1.0, 0.69, 1, 6.0, 18.0,_,_,4)
		show_hudmessage(0, "CountDown Done!!^nThe Box Started!")
		for(new i = 1; i <= get_maxplayers( ); i++)
			set_pev(i, pev_flags, pev(i, pev_flags) & ~FL_FROZEN);
		cdactive  = false
		get_user_name(id,szName,charsmax(szName));
		server_cmd("mp_friendlyfire 1");
		gBox=true;
		ColorChat(0,"^4%s ^1has ^3activated ^1the friendly fire of the terrorist",szName);
		freeze[id] = false;
		cdtime[id] = 0;
		BoxMenu(id)
	}
	return 1;
}
public startbox (id)
{
	if(!(get_pcvar_num(cBox))) return 0;
	new szName [32];
	get_user_name(id,szName,charsmax(szName));
	server_cmd("mp_friendlyfire 1");
	gBox=true;
	ColorChat(0,"^4%s ^1has ^3activated ^1the friendly fire of the terrorist",szName);	
	BoxMenu(id)
	return 1;
}
public stopbox (id)
{
	if(!(get_pcvar_num(cBox))) return 0;
	new szName [32];
	get_user_name(id,szName,charsmax(szName));
	server_cmd("mp_friendlyfire 0");
	gBox=false;
	ColorChat(0,"^4%s ^1has ^3deactivated ^1the friendly fire of the terrorist",szName);	
	return 1;
}
public resethp (id)
{
	if(!(get_pcvar_num(cBox))) return 0;
	for(new i = 1;i <= MaxPlayers;i++)
	{
		if(!is_user_alive(i))
			continue;
		if(cs_get_user_team(i) == CS_TEAM_T)
			fm_set_user_health(i,get_user_max_health(i))
	}
	return BoxMenu(id);
}
public UnDamage (victim, inflictor, attacker, Float:damage)
{
	if(!(get_pcvar_num(cBox))) return HAM_IGNORED;
	if(is_user_alive(victim) && is_user_alive(attacker) && cs_get_user_team(victim) == CS_TEAM_CT && cs_get_user_team(attacker) == CS_TEAM_CT &&  gBox)
		return HAM_SUPERCEDE;
	return HAM_IGNORED;
}



stock ColorChat( const iPlayer, const szMsg[ ], { Float, Sql, Resul, _ } : ... )        
{
	new iMsg[ 191 ], iPlayers[ 32 ], iCount = 1;
	static iLen;
	iLen = formatex( iMsg, charsmax( iMsg ), "^4[^1 %s ^4] ^1",Chat_TAG );
	vformat( iMsg[ iLen ], charsmax( iMsg ) - iLen, szMsg, 3 );
	if ( iPlayer )
		iPlayers[ 0 ] = iPlayer;
	else    
		get_players( iPlayers, iCount, "ch" );  
	for ( new i = 0; i < iCount; i++ )
	{
		if ( ! is_user_connected( iPlayers[ i ] ) )
			continue;
		message_begin( MSG_ONE_UNRELIABLE, get_user_msgid( "SayText" ), _,iPlayers[ i ] );
		write_byte( iPlayers[ i ] );
		write_string( iMsg );
		message_end( );
	}
	return 1;
}
