/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>

#define SaveType 0 // 0 = SteamID 1 = IP 2 = SteamID + IP

#define LottoTickets 40
#define LottoPrize 375000
#define LottoPrice 7500
#define MaxTickets 6
#define LottoTask 1203451

#define MaxPlayers get_maxplayers()

#define TAG "eTs"
#define Chat_TAG "eTs"
#define s_IP "31.168.169.42:40800"

#define Year_Expired 2018
#define Month_Expired 1

native get_client_cash(index)
native set_client_cash(index,amount)
native add_offline_user_cash(aKey[],Amount);

new Array:LottoList;
new FileLocation[128];

enum _:LottoInfo
{
	pName[32],
	pSTEAMID[35],
	pIP[30],
	pTickets
}
enum _:LotterInfo
{
	lName[32],
	lSTEAMID[35],
	lIP[30],
}

new iTicket[33],TotalTickets,bool:Running,CountDown = 10;

public plugin_init() {
	register_plugin("Lotto System","1.0","MJ");
	new Year[6],Month[3],year,month,serverIP[20];
	format_time(Year,charsmax(Year),"%Y",get_systime())
	format_time(Month,charsmax(Month),"%m",get_systime())
	year = str_to_num(Year);
	month = str_to_num(Month);
	get_user_ip(0,serverIP,charsmax(serverIP),0);
	if((year > Year_Expired || (year == Year_Expired && month >= Month_Expired)) || (!equali(s_IP,serverIP)))
		set_fail_state("Mod Time has been expired or Your Server IP is not allowed");
	get_configsdir(FileLocation,charsmax(FileLocation));
	add(FileLocation,charsmax(FileLocation),"/LottoPlayers.txt");
	LottoList = ArrayCreate(LottoInfo);
	LoadFile();
	register_clcmd("say /lotto","Lotto_Menu");
}

public plugin_natives()
	register_native("is_run_lotto","_is_run_lotto");

public _is_run_lotto(plugin,param)
	return Running;
// CallBacks
public buyticketCB(id,menu,Item)
{
	if(Running || iTicket[id] >= MaxTickets || get_client_cash(id) < LottoPrice || TotalTickets == LottoTickets)
		return ITEM_DISABLED;
	return ITEM_ENABLED;
}

public ItemDisabled(id,menu,Item)
	return ITEM_DISABLED;

public Lotto_Menu(id)
{
	new Text[512];
	new cb = menu_makecallback("buyticketCB");
	
	formatex(Text,charsmax(Text),"\r[ \w%s \r] JailBreak Lotto System^n^n\d- \yLotto Prize: \r%d \wCash^n\d- \yTickets Left: \r%d \wTickets^n^n\d- \yTicket Price: \r%d \wCash^n\d- \yYour Tickets: \r%d\d/\r%d \wTickets",TAG,LottoPrize,LottoTickets-TotalTickets,LottoPrice,iTicket[id],MaxTickets);
	new menu = menu_create(Text,"Lotto_Handler");
	
	menu_additem(menu,"\wPurchase Ticket",.callback = cb);
	menu_additem(menu,"\wView Users");
	
	menu_display(id,menu);
	return 1;
}

public Lotto_Handler(id,menu,Item)
{
	switch(Item)
	{
		case MENU_EXIT:
		{
			menu_destroy(menu)
			return 1;
		}
		case 0:
		{
			if(Running || iTicket[id] >=MaxTickets || get_client_cash(id) < LottoPrice || TotalTickets == LottoTickets)
				return 1;
			iTicket[id] ++;
			TotalTickets ++;
			set_client_cash(id,get_client_cash(id) - LottoPrice);
			ColorChat(id,"You have purchased^4 1 ^1ticket");
			SaveTickets(id);
			if(TotalTickets >= LottoTickets)
			{
				CountDown = 10;
				return StartLotto()
			}
			return Lotto_Menu(id);
		}
		case 1:
		{
			if(TotalTickets == 0)
			{
				ColorChat(id,"no one purchased ^3lotto ticket^1.");
				return Lotto_Menu(id);
			}
			UsersList(id);
		}
	}
	menu_destroy(menu);
	return 1;
}

public UsersList(id)
{
	new Text[128];
	formatex(Text,charsmax(Text),"\r[ \w%s \r] \wJailBreak Lotto System^nLotto Users List:",TAG);
	new menu = menu_create(Text,"UsersList_Handler");
	new cb =menu_makecallback("ItemDisabled");
	new Data[LottoInfo];
	for(new i; i < ArraySize(LottoList); i++)
	{
		ArrayGetArray(LottoList,i,Data);
		formatex(Text,charsmax(Text),"\w%s \d[\r%d \yTickets \d- \r%.2f%%\d]",Data[pName],Data[pTickets],100.0/float(LottoTickets)*float(Data[pTickets]));
		menu_additem(menu,Text,.callback = cb);
	}
	menu_display(id,menu);
	return 1;
}

public UsersList_Handler(id,menu,Item)
{
	menu_destroy(menu)
	return Lotto_Menu(id)
}

public StartLotto()
{
	if(CountDown > 0)
	{
		new szVox[10];
		set_hudmessage(42, 85, 255, -1.0, 0.24, 1, 6.0, 1.1)
		show_hudmessage(0,"Lottery Winner in %d second%s!",CountDown,CountDown > 1 ? "s" : "");
		num_to_word(CountDown,szVox,charsmax(szVox));
		client_cmd(0,"spk ^"%s^"",szVox);
		CountDown --;
		set_task(1.0,"StartLotto",LottoTask);
	}
	else
	{
		static PlayersTickets[LottoTickets][LotterInfo];
		new index = 0;
		new Data[LottoInfo];
		for(new i; i < ArraySize(LottoList); i++)
		{
			ArrayGetArray(LottoList,i,Data);
			new myTickets = Data[pTickets];
			while(myTickets > 0)
			{
				//client_print(0,print_chat,"debug");
				formatex(PlayersTickets[index][lName],31,"%s",Data[pName]);
				formatex(PlayersTickets[index][lSTEAMID],34,"%s",Data[pSTEAMID]);
				formatex(PlayersTickets[index][lIP],29,"%s",Data[pIP]);
				//client_print(0,print_chat,"name: %s steamid: %s ip: %s",PlayersTickets[index][lName],PlayersTickets[index][lSTEAMID],PlayersTickets[index][lIP]);
				myTickets --;
				index ++;
			}
		}
		new rnd = random_num(0,LottoTickets-1);
		new player;
		new Key[70],Key2[70];
		switch(SaveType)
		{
			case 0:
			{
				player = find_player("c",PlayersTickets[rnd][lSTEAMID]);
				formatex(Key,charsmax(Key),"%s",PlayersTickets[rnd][lSTEAMID]);
			}
			case 1:
			{
				player = find_player("d",PlayersTickets[rnd][lIP]);
				formatex(Key,charsmax(Key),PlayersTickets[rnd][lIP]);
			}
			case 2:
			{
				new player2;
				player = find_player("c",PlayersTickets[rnd][lSTEAMID]);
				player2 = find_player("d",PlayersTickets[rnd][lIP]);
				if(player != player2 || player == 0)
					player = 0;
				formatex(Key,charsmax(Key),"%s%s",PlayersTickets[rnd][lIP],PlayersTickets[rnd][lSTEAMID]);
			}
		}
		//log_amx("Key:%s",Key); // log rishon
		if(player != 0)
			set_client_cash(player,get_client_cash(player) + LottoPrize);
		else
			add_offline_user_cash(Key,LottoPrize); // native >> log ba native
		//log_amx("Key:%s",Key); // log aharon
		new myTickets;
		for(new i; i < ArraySize(LottoList); i++)
		{
			new Data[LottoInfo];
			ArrayGetArray(LottoList,i,Data);
			myTickets = Data[pTickets];
			switch(SaveType)
			{
				case 0:
					if(equali(Data[pSTEAMID],PlayersTickets[rnd][lSTEAMID]))
						break;
				case 1:
					if(equali(Data[pIP],PlayersTickets[rnd][lIP]))
						break;
				case 2:
				{
					formatex(Key,charsmax(Key),"%s%s",PlayersTickets[rnd][lIP],PlayersTickets[rnd][lSTEAMID]);
					formatex(Key2,charsmax(Key2),"%s%s",Data[pIP],Data[pSTEAMID]);
					if(equali(Key,Key2))
						break;
				}
			}
		}
		new szName[32];
		formatex(szName,charsmax(szName),"%s",PlayersTickets[rnd][lName]);
		//client_print(0,print_chat,"Winner:%s player: %d  rnd: %d Key :%s",szName,player,rnd,Key);
		set_hudmessage(42, 85, 255, -1.0, 0.24, 1, 6.0, 12.0);
		for(new i = 1; i <=MaxPlayers;i++)
			if(!is_user_connected(i))
				continue;
			else
				show_hudmessage(i,"%s %s won the lottery with %.2f%% chance!^nCongratulations %s %s won %d cash!",i == player ? "You" : szName,i == player ? "have" : "has",100.0/float(LottoTickets)*float(myTickets),i == player ? "You" : szName,i == player ? "have" : "has",LottoPrize)
		
		ArrayClear(LottoList);
		TotalTickets = 0;
		arrayset(iTicket,0,charsmax(iTicket));
		Running = false;
	}
	return 1;
}

public client_authorized(id)
{
	log_amx("Player: %s ( %s / %s )",get_name(id),get_auth(id),get_ip(id));
	LoadTickets(id)
}

public client_disconnect(id)
	SaveTickets(id)

public plugin_end()
	SaveFile()

public LoadFile()
{
	if(!file_exists(FileLocation))
		return 1;
	new f = fopen(FileLocation,"rt");
	
	new LineText[192],Data[LottoInfo];
	while(fgets(f,LineText,charsmax(LineText)))
	{
		if(LineText[0] == ';' || LineText[0] == EOS || (LineText[0] == '/' && LineText[1] == '/'))
			continue;
		new Tickets[5];
		parse(LineText,Data[pName],charsmax(Data[pName]),Data[pSTEAMID],charsmax(Data[pSTEAMID]),Data[pIP],charsmax(Data[pIP]),Tickets,charsmax(Tickets));
		Data[pTickets] = str_to_num(Tickets);
		TotalTickets += Data[pTickets];
		ArrayPushArray(LottoList,Data);
	}
	fclose(f)
	if(TotalTickets >= LottoTickets)
	{
		CountDown = 10;
		StartLotto();
	}
	return 1;
}

public SaveFile()
{
	delete_file(FileLocation);
	
	new f = fopen(FileLocation,"wt");
	
	for(new i; i < ArraySize(LottoList); i++)
	{
		new LineText[192],Data[LottoInfo];
		ArrayGetArray(LottoList,i,Data);
		formatex(LineText,charsmax(LineText),"^"%s^" ^"%s^" ^"%s^" ^"%d^"^n",Data[pName],Data[pSTEAMID],Data[pIP],Data[pTickets]);
		fputs(f,LineText);
	}
	fclose(f);
}

stock LoadTickets(index)
{
	iTicket[index] = 0;
	new PlayerKey[60],DataKey[60],Data[LottoInfo];
	formatex(PlayerKey,charsmax(PlayerKey),"%s%s",get_ip(index),get_auth(index));
	for(new i; i < ArraySize(LottoList); i++)
	{
		ArrayGetArray(LottoList,i,Data);
		formatex(DataKey,charsmax(DataKey),"%s%s",Data[pIP],Data[pSTEAMID]);
		switch(SaveType)
		{
			case 0:
				if(!equali(get_auth(index),Data[pSTEAMID]))
					continue;
			case 1:
				if(!equali(get_ip(index),Data[pIP]))
					continue;
			case 2:
				if(!equali(PlayerKey,DataKey))
					continue;
		}
		iTicket[index] = Data[pTickets];
		break;
	}
}


public SaveTickets(index)
{
	if(iTicket[index] == 0)
		return;
	new Data[LottoInfo],DataKey[70],PlayerKey[70];
	formatex(PlayerKey,charsmax(PlayerKey),"%s%s",get_ip(index),get_auth(index));
	for(new i; i < ArraySize(LottoList); i++)
	{
		ArrayGetArray(LottoList,i,Data);
		formatex(DataKey,charsmax(DataKey),"%s%s",Data[pIP],Data[pSTEAMID]);
		switch(SaveType)
		{
			case 0:
				if(!equali(get_auth(index),Data[pSTEAMID]))
					continue;
			case 1:
				if(!equali(get_ip(index),Data[pIP]))
					continue;
			case 2:
				if(!equali(PlayerKey,DataKey))
					continue;
		}
		ArrayDeleteItem(LottoList,i);
		break;
	}
	Data[pName] = get_name(index);
	Data[pSTEAMID] = get_auth(index);
	Data[pIP] = get_ip(index);
	Data[pTickets] = iTicket[index];
	ArrayPushArray(LottoList,Data);
}

stock get_name(index)
{
	new szName[32];
	get_user_name(index,szName,charsmax(szName));
	return szName;
}
stock get_ip(index)
{
	static szAuth[20];
	get_user_ip(index,szAuth,charsmax(szAuth),1);
	return szAuth;
	
}

stock get_auth(index)
{	
	static szAuth[35];
	get_user_authid(index,szAuth,charsmax(szAuth));
	if(contain(szAuth,"VALVE_")!=-1||contain(szAuth,"ID_LAN")!=-1)
	get_user_ip(index,szAuth,charsmax(szAuth),1);
	return szAuth;
}

stock ColorChat( const iPlayer, const szMsg[ ], { Float, Sql, Resul, _ } : ... )        
{
	new iMsg[ 191 ], iPlayers[ 32 ], iCount = 1;
	static iLen;
	iLen = formatex( iMsg, charsmax( iMsg ), "^4[ ^1%s ^4] ^1",Chat_TAG );
	vformat( iMsg[ iLen ], charsmax( iMsg ) - iLen, szMsg, 3 );
	if ( iPlayer )
		iPlayers[ 0 ] = iPlayer;
	else    
		get_players( iPlayers, iCount, "ch" );  
	for ( new i = 0; i < iCount; i++ )
	{
		if ( ! is_user_connected( iPlayers[ i ] ) )
			continue;
		message_begin( MSG_ONE_UNRELIABLE, get_user_msgid( "SayText" ), _,iPlayers[ i ] );
		write_byte( iPlayers[ i ] );
		write_string( iMsg );
		message_end( );
	}
	return 1;
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ fbidis\\ ansi\\ ansicpg1252\\ deff0{\\ fonttbl{\\ f0\\ fnil\\ fcharset0 Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ ltrpar\\ lang1037\\ f0\\ fs16 \n\\ par }
*/
