/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <hamsandwich>
#include <fakemeta_util>

#define TAG "eTs"
#define Chat_TAG "eTs"
#define s_IP "31.168.169.42:40800"

#define Year_Expired 2018
#define Month_Expired 1

#define Player_r 10
#define Premium_r 12

native is_user_premium(index)

new r_Player[33],cRounds;

public plugin_init() {
	
	new Year[6],Month[3],year,month,serverIP[20];
	format_time(Year,charsmax(Year),"%Y",get_systime())
	format_time(Month,charsmax(Month),"%m",get_systime())
	year = str_to_num(Year);
	month = str_to_num(Month);
	get_user_ip(0,serverIP,charsmax(serverIP),0);
	if((year > Year_Expired || (year == Year_Expired && month >= Month_Expired)) || (!equali(s_IP,serverIP)))
		set_fail_state("Mod Time has been expired or Your Server IP is not allowed");
	register_plugin("Guard Rounds","1.0","MJ")
	
	register_clcmd("say","SayHandler");
	cRounds = register_cvar("jb_rounds","1");
	
	register_logevent("EventRoundEnd",2,"1=Round_End");
	
	RegisterHam(Ham_Spawn, "player", "CTSpawn", 1 );
}
public client_putinserver(id) 
	r_Player[id] = 0;

public plugin_natives()
{
	register_native("get_user_rounds","_get_round")
	register_native("set_user_rounds","_set_round")
	
}
public _set_round( plugin , param )
{
	new id = get_param(1)
	new Amount = get_param(2);
	r_Player[id] = Amount;
}
public _get_round( plugin , param )
{
	new id = get_param(1)
	return r_Player[id];
}
public CTSpawn(id)
{
	if(!(get_pcvar_num(cRounds)) || !(is_user_alive(id))) return 0;
	if (cs_get_user_team(id) == CS_TEAM_CT)
		return ColorChat(id,"You ^1have completed ^3%d^1/^4%d ^1rounds in the Guard",r_Player[id],is_user_premium(id)? Premium_r : Player_r)
	return 1;
}
public EventRoundEnd ()
{
	if(!(get_pcvar_num(cRounds))) return 0;
	
	new MaxRounds[33];
	
	for (new i = 1;i < get_maxplayers(); i++)
	{
		if (!(is_user_connected(i))) continue;
		
		if(cs_get_user_team(i) != CS_TEAM_CT) continue;
		
		
		r_Player[i] ++;
		
		if (is_user_premium(i))
			MaxRounds[i] = Premium_r;
		else
			MaxRounds[i] = Player_r;
		
		if (r_Player[i] >= MaxRounds[i])
		{
			cs_set_user_team(i,CS_TEAM_T);
			fm_DispatchSpawn(i)
			r_Player[i] = 0;
			return ColorChat(0,"%s ^1have done his ^3rounds ^1in the Guard and ^3transfered to the Terrorists",get_name(i));
		}
	}
	return 1;
}

public SayHandler (id)
{
	if(!(get_pcvar_num(cRounds))) return 0;
	
	new Args[128],Arg1[32],Arg2[32];
	read_argv(1,Args,charsmax(Args));
	remove_quotes(Args)
	parse(Args,Arg1,charsmax(Arg1),Arg2,charsmax(Arg2));
	if(equali(Arg1,"/round") || equali(Arg1,"/rounds"))
	{
		new player = cmd_target(player,Arg2,8);
		
		if (equali(Arg2,""))
		{
			if(cs_get_user_team(id) == CS_TEAM_CT)
				return ColorChat(id,"You ^1have completed ^3%d^1/^4%d ^1rounds in the ^3Guard",r_Player[id],is_user_premium(id) ? Premium_r : Player_r)
			return ColorChat(id,"You ^1need to fill the ^3Guard Name");
		}
		if (id == player)
			return ColorChat(id,"You ^1have completed ^3%d^1/^4%d ^1rounds in the ^3Guard",r_Player[id], is_user_premium(id) ? Premium_r : Player_r)
		if (cs_get_user_team(player) != CS_TEAM_CT)
			return ColorChat(id,"^1Player ^4%s ^1has not ^3Guard",get_name(player));
		if (!player)
			return ColorChat(id,"^1Player ^4%s ^1has not ^3exist^1/^3connected^1!",get_name(player));
		return ColorChat(id,"^1Player ^4%s ^1has completed ^3%d^1/^4%d ^1rounds in the ^3Guard",get_name(player),r_Player[player],is_user_premium(id) ? Premium_r : Player_r)
	}
	return 0;
}
stock get_name(const index)
{
	new szName[32];
	get_user_name(index,szName,charsmax(szName));
	return szName;
}


stock ColorChat( const iPlayer, const szMsg[ ], { Float, Sql, Resul, _ } : ... )        
{
	new iMsg[ 191 ], iPlayers[ 32 ], iCount = 1;
	static iLen;
	iLen = formatex( iMsg, charsmax( iMsg ), "^4[^1 %s ^4] ^1",Chat_TAG );
	vformat( iMsg[ iLen ], charsmax( iMsg ) - iLen, szMsg, 3 );
	if ( iPlayer )
		iPlayers[ 0 ] = iPlayer;
	else    
		get_players( iPlayers, iCount, "ch" );  
	for ( new i = 0; i < iCount; i++ )
	{
		if ( ! is_user_connected( iPlayers[ i ] ) )
			continue;
		message_begin( MSG_ONE_UNRELIABLE, get_user_msgid( "SayText" ), _,iPlayers[ i ] );
		write_byte( iPlayers[ i ] );
		write_string( iMsg );
		message_end( );
	}
	return 1;
}
